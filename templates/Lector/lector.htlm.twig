{% block body %}
    <link rel="stylesheet" href="{{ asset('bundles/blueimp-gallery/css/blueimp-gallery.min.css') }}" />

    <div
            id="blueimp-gallery"
            class="blueimp-gallery"
            aria-label="image gallery"
            aria-modal="true"
            role="dialog"
    >
        <div class="slides" aria-live="polite"></div>
        <h3 class="title"></h3>
        <a
                class="prev"
                aria-controls="blueimp-gallery"
                aria-label="previous slide"
                aria-keyshortcuts="ArrowLeft"
        >‹</a
        >
        <a
                class="next"
                aria-controls="blueimp-gallery"
                aria-label="next slide"
                aria-keyshortcuts="ArrowRight"
        >›</a
        >
        <a
                class="close"
                aria-controls="blueimp-gallery"
                aria-label="close"
                aria-keyshortcuts="Escape"
        >×</a
        >
        <a
                class="play-pause"
                aria-controls="blueimp-gallery"
                aria-label="play slideshow"
                aria-keyshortcuts="Space"
                aria-pressed="false"
                role="button"
        ></a>
        <ol class="indicator"></ol>
    </div>

    <div id="links">
        <a href="{{ asset('media/5edfc212cc99f_01.jpg') }}" title="Banana">
            <img class="lazy" src="{{ asset('media/5edfc212cc99f_01.jpg') }}" alt="Banana" />
        </a>
        <a href="{{ asset('media/5ee1544339b84_02.jpg') }}" title="Apple">
            <img class="lazy" src="{{ asset('media/5ee1544339b84_02.jpg') }}" alt="Apple" />
        </a>

    </div>

    <script src="{{ asset('bundles/blueimp-gallery/js/blueimp-gallery.min.js') }}"></script>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            var lazyImages = [].slice.call(document.querySelectorAll("img.lazy"));

            if ("IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype) {
                let lazyImageObserver = new IntersectionObserver(function(entries, observer) {
                    entries.forEach(function(entry) {
                        if (entry.isIntersecting) {
                            let lazyImage = entry.target;
                            lazyImage.src = lazyImage.dataset.src;
                            lazyImage.srcset = lazyImage.dataset.srcset;
                            lazyImage.classList.remove("lazy");
                            lazyImageObserver.unobserve(lazyImage);
                        }
                    });
                });

                lazyImages.forEach(function(lazyImage) {
                    lazyImageObserver.observe(lazyImage);
                });
            }
        });

        document.getElementById('links').onclick = function (event) {
            event = event || window.event
            var target = event.target || event.srcElement
            var link = target.src ? target.parentNode : target
            var options = { index: link, event: event }
            var links = this.getElementsByTagName('a')
            blueimp.Gallery(links, options)
        }
        blueimp.Gallery(document.getElementById('links').getElementsByTagName('a'), {
            container: '#blueimp-gallery-carousel',
            carousel: false
        })
    </script>
{% endblock %}
